{"version":3,"sources":["constants.js","components/Header.js","utils.js","components/Link.js","components/LinkList.js","components/CreateLink.js","components/Login.js","components/Search.js","components/App.js","serviceWorker.js","index.js"],"names":["AUTH_TOKEN","LINKS_PER_PAGE","Header","_this","this","authToken","localStorage","getItem","react_default","a","createElement","className","es_Link","to","onClick","removeItem","props","history","push","Component","withRouter","timeDifferenceForDate","date","current","previous","elapsed","milliSecondsPerMinute","Math","round","milliSecondsPerHour","milliSecondsPerDay","timeDifference","Date","getTime","VOTE_MUTATION","gql","_templateObject","Link","index","react_apollo_browser_umd","mutation","variables","linkId","link","id","update","store","_ref","vote","data","updateStoreAfterVote","voteMutation","description","url","votes","length","postedBy","name","createdAt","FEED_QUERY","LinkList_templateObject","NEW_LINKS_SUBSCRIPTION","_templateObject2","NEW_VOTES_SUBSCRIPTION","_templateObject3","LinkList","_updateCacheAfterVote","createVote","isNewPage","location","pathname","includes","page","parseInt","match","params","skip","first","orderBy","readQuery","query","feed","links","find","writeQuery","_subscribeToNewLinks","subscribeToMore","document","updateQuery","prev","subscriptionData","newLink","_ref2","Object","assign","concat","toConsumableArray","count","__typename","_subscribeToNewVotes","_getQueryVariables","_getLinksToRender","rankedLinks","slice","sort","l1","l2","_nextPage","nextPage","_previousPage","previousPage","_this2","_ref3","loading","error","linksToRender","pageIndex","react","map","components_Link","key","POST_MUTATION","CreateLink_templateObject","CreateLink","state","_this$state","value","onChange","e","setState","target","type","placeholder","onCompleted","post","unshift","postMutation","SIGNUP_MUTATION","Login_templateObject","LOGIN_MUTATION","Login_templateObject2","Login","login","email","password","_confirm","_callee","token","regenerator_default","wrap","_context","next","signup","_saveUserData","stop","setItem","FEED_SEARCH_QUERY","Search_templateObject","Search","filter","_executeSearch","result","client","sent","withApollo","App","components_Header","Switch","Route","exact","path","render","Redirect","component","Boolean","window","hostname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","objectSpread","authorization","wsLink","WebSocketLink","options","reconnect","connectionParams","split","_getMainDefinition","getMainDefinition","kind","operation","ApolloClient","cache","InMemoryCache","ReactDOM","BrowserRouter","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc1c28aa.chunk.js","sourcesContent":["export const AUTH_TOKEN = 'auth-token'\nexport const LINKS_PER_PAGE = 5","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport { AUTH_TOKEN } from '../constants';\n\nclass Header extends Component {\n  render() {\n    const authToken = localStorage.getItem(AUTH_TOKEN)\n    return (\n      <div className='flex pal justify-between nowrap orange'>\n        <div className='flex flex-fixed black'>\n          <div className=\"fw7 mr1\">Hacker News</div>\n          <Link to='/' className='ml1 no-underline black'>\n            new\n          </Link>\n          <div className=\"ml1\">|</div>\n          <Link to=\"/top\" className=\"ml1 no-underline black\">\n            top\n          </Link>\n          <div className=\"ml1\">|</div>\n          <Link to=\"/search\" className=\"ml1 no-underline black\">\n            search\n          </Link>\n          {authToken && (\n            <div className=\"flex\">\n              <div className='ml1'>|</div>\n              <Link to='/create' className=\"ml1 no-underline black\">\n                submit\n              </Link>\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-fixed\">\n          {authToken ? (\n            <div \n              className=\"ml1 pointer black\"\n              onClick={() => {\n                localStorage.removeItem(AUTH_TOKEN)\n                this.props.history.push(`/`)\n              }}\n            >\n            log out\n            </div>\n          ) : (\n            <Link to=\"/login\" className=\"ml1 no-underline black\">\n              login\n            </Link>\n          )}\n        </div>          \n      </div>\n    )\n  }\n}\n\nexport default withRouter(Header)","function timeDifference(current, previous) {\n  const milliSecondsPerMinute = 60 * 1000\n  const milliSecondsPerHour = milliSecondsPerMinute * 60\n  const milliSecondsPerDay = milliSecondsPerHour * 24\n  const milliSecondsPerMonth = milliSecondsPerDay * 30\n  const milliSecondsPerYear = milliSecondsPerDay * 365\n\n  const elapsed = current - previous\n\n  if (elapsed < milliSecondsPerMinute / 3) {\n    return 'just now'\n  }\n\n  if (elapsed < milliSecondsPerMinute){\n    return 'less than 1 min ago'\n  } else if (elapsed < milliSecondsPerHour) {\n    return Math.round(elapsed / milliSecondsPerMinute) + ' min ago'\n  } else if (elapsed < milliSecondsPerDay) {\n    return Math.round(elapsed / milliSecondsPerHour) + ' h ago'\n  } else if (elapsed < milliSecondsPerMonth) {\n    return Math.round(elapsed / milliSecondsPerDay) + ' days ago'\n  } else if (elapsed < milliSecondsPerYear) {\n    return Math.round(elapsed / milliSecondsPerMonth) + ' month ago'\n  } else {\n    return Math.round(elapsed / milliSecondsPerYear) + ' years ago'\n  }\n}\n\nexport function timeDifferenceForDate(date) {\n  const now = new Date().getTime()\n  const updated = new Date(date).getTime()\n  return timeDifference(now, updated)\n}","import React, { Component } from 'react'\nimport { AUTH_TOKEN } from '../constants'\nimport { timeDifferenceForDate } from '../utils'\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag'\n\nconst VOTE_MUTATION = gql`\n  mutation VoteMutation($linkId: ID!) {\n    vote(linkId: $linkId){\n      id\n      link {\n        votes {\n          id  \n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`\n\nclass Link extends Component {\n  render() {\n    const authToken = localStorage.getItem(AUTH_TOKEN)\n    return (\n      <div className=\"flex mt2 items-start\">\n        <div className=\"flex items-center\">\n          <span className=\"gray\">{this.props.index + 1}.</span>\n          {authToken && (\n            <Mutation \n              mutation={VOTE_MUTATION} \n              variables={{ linkId: this.props.link.id }}\n              update={(store, { data: { vote } }) =>\n                this.props.updateStoreAfterVote(store, vote, this.props.link.id)\n              }\n            >\n              {voteMutation => (\n                <div className=\"ml1 gray fl1\" onClick={voteMutation}>\n                  ▲\n                </div>\n              )}\n            </Mutation>\n            \n          )}\n        </div>\n        <div className=\"ml1\">\n          {this.props.link.description} ({this.props.link.url})\n        </div>\n        <div className=\"f6 lh-copy gray\">\n          {this.props.link.votes.length} votes | by{' '}\n          {this.props.link.postedBy\n            ? this.props.link.postedBy.name\n            : 'Unknown'}{' '}\n          {timeDifferenceForDate(this.props.link.createdAt)}          \n        </div>\n      </div>      \n    )\n  }\n}\n\nexport default Link","import React, { Component, Fragment } from 'react'\nimport Link from './Link'\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag'\nimport { LINKS_PER_PAGE } from '../constants'\n\nexport const FEED_QUERY = gql`\n  query FeedQuery($first: Int, $skip: Int, $orderBy: LinkOrderByInput) {\n    feed(first: $first, skip: $skip, orderBy: $orderBy) {\n      links {\n        id\n        createdAt\n        url\n        description\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`\n\nconst NEW_LINKS_SUBSCRIPTION = gql`\n  subscription {\n    newLink {\n      id\n      url\n      description\n      createdAt\n      postedBy {\n        id\n        name\n      }\n      votes {\n        id\n        user {\n          id\n        }\n      }\n    }\n  }\n`\nconst NEW_VOTES_SUBSCRIPTION = gql`\n  subscription {\n    newVote {\n      id\n      link {\n        id\n        url\n        description\n        createdAt\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n      user {\n        id\n      }\n    }\n  }\n`\nclass LinkList extends Component {\n  render() {\n    return (\n      <Query query={FEED_QUERY} variables={this._getQueryVariables()}>\n        {({ loading, error, data, subscribeToMore }) => {\n          if (loading) return <div>Fetching</div>\n          if (error) return <div>Error</div>\n  \n          this._subscribeToNewLinks(subscribeToMore)\n          this._subscribeToNewVotes(subscribeToMore)\n  \n          const linksToRender = this._getLinksToRender(data)\n          const isNewPage = this.props.location.pathname.includes('new')\n          const pageIndex = this.props.match.params.page\n            ? (this.props.match.params.page - 1) * LINKS_PER_PAGE\n            : 0\n  \n          return (\n            <Fragment>\n              {linksToRender.map((link, index) => (\n                <Link\n                  key={link.id}\n                  link={link}\n                  index={index + pageIndex}\n                  updateStoreAfterVote={this._updateCacheAfterVote}\n                />\n              ))}\n              {isNewPage && (\n                <div className=\"flex ml4 mv3 gray\">\n                  <div className=\"pointer mr2\" onClick={this._previousPage}>\n                    Previous\n                  </div>\n                  <div className=\"pointer\" onClick={() => this._nextPage(data)}>\n                    Next\n                  </div>\n                </div>\n              )}\n            </Fragment>\n          )\n        }}\n      </Query>\n    )\n  }\n  _updateCacheAfterVote = (store, createVote, linkId) => {\n    const isNewPage = this.props.location.pathname.includes('new')\n    const page = parseInt(this.props.match.params.page, 10)\n\n    const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0\n    const first = isNewPage ? LINKS_PER_PAGE : 100\n    const orderBy = isNewPage ? 'createdAt_DESC' : null\n    const data = store.readQuery({\n      query: FEED_QUERY,\n      variables: { first, skip, orderBy }\n    })\n    \n    const votedLink = data.feed.links.find(link => link.id === linkId)\n    votedLink.votes = createVote.link.votes\n    \n    store.writeQuery({ query: FEED_QUERY, data })\n  }\n\n  _subscribeToNewLinks = subscribeToMore => {\n    subscribeToMore({\n      document: NEW_LINKS_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev\n        const newLink = subscriptionData.data.newLink\n        const exists = prev.feed.links.find(({ id }) => id === newLink.id);\n        if (exists) return prev;\n  \n        return Object.assign({}, prev, {\n          feed: {\n            links: [newLink, ...prev.feed.links],\n            count: prev.feed.links.length + 1,\n            __typename: prev.feed.__typename\n          }\n        })\n      }\n    })\n  }\n\n  _subscribeToNewVotes = subscribeToMore => {\n    subscribeToMore({\n      document: NEW_VOTES_SUBSCRIPTION\n    })\n  }\n\n  _getQueryVariables = () => {\n    const isNewPage = this.props.location.pathname.includes('new')\n    const page = parseInt(this.props.match.params.page, 10)\n  \n    const skip = isNewPage ? (page - 1) * LINKS_PER_PAGE : 0\n    const first = isNewPage ? LINKS_PER_PAGE : 100\n    const orderBy = isNewPage ? 'createdAt_DESC' : null\n    return { first, skip, orderBy }\n  }\n\n  _getLinksToRender = data => {\n    const isNewPage = this.props.location.pathname.includes('new')\n    if (isNewPage) {\n      return data.feed.links\n    }\n    const rankedLinks = data.feed.links.slice()\n    rankedLinks.sort((l1, l2) => l2.votes.length - l1.votes.length)\n    return rankedLinks\n  }\n\n  _nextPage = data => {\n    const page = parseInt(this.props.match.params.page, 10)\n    if (page <= data.feed.count / LINKS_PER_PAGE) {\n      const nextPage = page + 1\n      this.props.history.push(`/new/${nextPage}`)\n    }\n  }\n  \n  _previousPage = () => {\n    const page = parseInt(this.props.match.params.page, 10)\n    if (page > 1) {\n      const previousPage = page - 1\n      this.props.history.push(`/new/${previousPage}`)\n    }\n  }\n}\n\nexport default LinkList","import React, { Component } from 'react'\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { FEED_QUERY } from './LinkList'\nimport { LINKS_PER_PAGE } from '../constants'\n\nconst POST_MUTATION = gql`\n  mutation  PostMutation($description: String!, $url: String!) {\n    post(description: $description, url: $url){\n      id\n      createdAt\n      url\n      description  \n    }\n  }\n`\n\nclass CreateLink extends Component {\n  state = {\n    description: '',\n    url: '',\n  }\n\n  render() {\n    const { description, url } = this.state\n    return (\n      <div>\n        <div className='flex flex-column mt3'>\n          <input \n            className=\"mb2\"\n            value={description}\n            onChange={e => this.setState({ description: e.target.value })}\n            type=\"text\"\n            placeholder=\"A description for the link\"\n          />\n          <input\n            className=\"mb2\"\n            value={url}\n            onChange={e => this.setState({ url: e.target.value })}\n            type=\"text\"\n            placeholder=\"The URL for the link\"\n          />\n        </div>\n        <Mutation \n          mutation={POST_MUTATION} \n          variables={{ description, url }}\n          onCompleted={() => this.props.history.push('/new/1')}\n          update={(store, { data: { post } }) => {\n            const first = LINKS_PER_PAGE\n            const skip = 0\n            const orderBy = 'createdAt_DESC'\n            const data = store.readQuery({\n              query: FEED_QUERY,\n              variables: { first, skip, orderBy }\n            })\n            data.feed.links.unshift(post)\n            store.writeQuery({\n              query: FEED_QUERY,\n              data,\n              variables: { first, skip, orderBy }\n            })\n          }}\n        >\n          {postMutation => <button onClick={postMutation}>Submit</button>}          \n        </Mutation>        \n      </div>\n    )\n  }\n}\n\nexport default CreateLink","import React, { Component } from 'react'\nimport { AUTH_TOKEN } from '../constants'\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst SIGNUP_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n    }\n  }\n`\nconst LOGIN_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n    }\n  }\n`\n\nexport default class Login extends Component {\n  state = {\n    login: true, // Switch between login and sign up\n    email: '',\n    password: '',\n    name: '',\n  }\n\n  render() {\n    const { login, email, password, name } = this.state\n    return (\n      <div>\n        <h4 className=\"mv3\">{login ? 'Login' : 'Sign Up'}</h4>\n        <div className=\"flex flex-column\">\n          {!login && (\n            <input\n              value={name}\n              onChange={e => this.setState({ name: e.target.value })}\n              type=\"text\"\n              placeholder=\"Your name\" \n            />\n          )}\n          <input \n            value={email}\n            onChange={e => this.setState({ email: e.target.value })}\n            type=\"text\"\n            placeholder=\"Your email address\"\n          />\n          <input \n            value={password}\n            onChange={e => this.setState({ password: e.target.value })}\n            type=\"password\"\n            placeholder=\"Choose safe password\"\n          />\n        </div>\n        <div className=\"flex mt3\">\n\t\t\t\t\t<Mutation\n\t\t\t\t\t\tmutation={login ? LOGIN_MUTATION : SIGNUP_MUTATION}\n\t\t\t\t\t\tvariables={{email, password, name}}\n\t\t\t\t\t\tonCompleted={data => this._confirm(data)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{mutation => (\n\t\t\t\t\t\t\t<div className=\"pointer mr2 button\" onClick={mutation}>\n\t\t\t\t\t\t\t\t{login ? 'login' : 'create account'}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Mutation>\n          \n          <div \n            className=\"pointer button\"\n            onClick={() => this.setState({ login: !login })}\n          >\n            {login\n            ? 'need to create an account?'\n            : 'already have an account? '}\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _confirm = async data => {\n\t\tconst { token } = this.state.login ? data.login : data.signup\n\t\tthis._saveUserData(token)\n\t\tthis.props.history.push(`/`)\n  }\n\n  _saveUserData = token => {\n    localStorage.setItem(AUTH_TOKEN, token)\n  }\n}\n","import React, { Component } from 'react'\nimport { withApollo } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport Link from './Link'\n\nconst FEED_SEARCH_QUERY = gql`\n  query FeedSearchQuery($filter: String!) {\n    feed(filter: $filter) {\n      links {\n        id\n        url\n        description\n        createdAt\n        postedBy {\n          id\n          name\n        }\n        votes {\n          id\n          user {\n            id\n          }\n        }\n      }\n    }\n  }\n`\nclass Search extends Component {\n\n  state = {\n    links: [],\n    filter: ''\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          Search\n          <input\n            type='text'\n            onChange={e => this.setState({ filter: e.target.value })}\n          />\n          <button onClick={() => this._executeSearch()}>OK</button>\n        </div>\n        {this.state.links.map((link, index) => (\n          <Link key={link.id} link={link} index={index} />\n        ))}\n      </div>\n    )\n  }\n\n  _executeSearch = async () => {\n    const { filter } = this.state\n    const result = await this.props.client.query({\n      query: FEED_SEARCH_QUERY,\n      variables: { filter },\n    })\n    const links = result.data.feed.links\n    this.setState({ links })\n  }\n}\n\nexport default withApollo(Search)","import React, { Component } from 'react';\nimport Header from './Header';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport LinkList from './LinkList';\nimport CreateLink from './CreateLink';\nimport Login from './Login';\nimport Search from './Search';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"center w85\">\n        <Header />\n        <div className=\"ph3 pv1 background-gray\">\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to='/new/1' />} />\n            <Route exact path=\"/\" component={LinkList} />\n            <Route exact path=\"/create\" component={CreateLink} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path='/search' component={Search} />\n            <Route exact path='/top' component={LinkList} />\n            <Route exact path='/new/:page' component={LinkList} />\n          </Switch>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { ApolloProvider } from 'react-apollo'\nimport { ApolloClient } from 'apollo-client'\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { AUTH_TOKEN } from './constants';\nimport {setContext } from 'apollo-link-context'\nimport { split } from 'apollo-link'\nimport { WebSocketLink } from 'apollo-link-ws'\nimport { getMainDefinition } from 'apollo-utilities'\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000'\n})\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(AUTH_TOKEN)\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  }\n})\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:4000`,\n  options: {\n    reconnect: true,\n    connectionParams: {\n      authToken: localStorage.getItem(AUTH_TOKEN),\n    }\n  }\n})\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query)\n    return kind === 'OperationDefinition' && operation === 'subscription'\n  },\n  wsLink,\n  authLink.concat(httpLink)\n)\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <BrowserRouter>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </BrowserRouter>, \n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}